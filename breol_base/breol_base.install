<?php

/**
 * @file
 * Install, update and uninstall functions for the breol_base module.
 */

/**
 * Implements hook_install().
 */
function breol_base_install() {
  db_update('system')
    ->fields(array('weight' => 0))
    ->condition('name', 'breol_base')
    ->condition('type', 'module')
    ->execute();
}

/**
 * Remove dead entity type field ref.
 *
 * @see https://www.drupal.org/docs/7/modules/views/data-fix-field-field-refers-to-nonexistent-entity-type-type
 *
 * @param array $field_names
 *   Field names.
 * @param string $entity_type
 *   The entity type to remove for the fields.
 *
 * @return void
 */
function breol_base_remove_dead_entity_type(array $field_names, string $entity_type) {
  foreach ($field_names as $field_name) {
    $instances = field_read_instances([
      'field_name' => $field_name,
      'entity_type' => $entity_type
    ], ['include_inactive' => TRUE]);
    if (!empty($instances)) {
      foreach ($instances as $instance) {
        field_delete_instance($instance, TRUE);
      }
    }
  }
}

/**
 * Disable unused modules.
 */
function breol_base_update_7101() {
  $modules = array(
    'ding_bookmark',
    'ding_groups',
    'ding_news',
    'ding_tabroll',
    'ding_library',
    'ding_staff',
    'ding_event',
  );

  module_disable($modules, TRUE);
  drupal_uninstall_modules($modules, TRUE);
}

/**
 * Delete leftover ding node types.
 */
function breol_base_update_7102() {
  $types = array(
    'ding_event',
    'ding_group',
    'ding_library',
    'ding_news',
    'ding_rolltab',
  );
  foreach ($types as $type) {
    node_type_delete($type);
  }
}

/**
 * Enable breol_news and breol_video.
 */
function breol_base_update_7103() {
  module_enable(array('breol_news', 'breol_video'), TRUE);
}

/**
 * Enable breol_search_frontend.
 */
function breol_base_update_7104() {
  module_enable(array('breol_search_frontend'), TRUE);
}

/**
 * Enable breol_subject.
 */
function breol_base_update_7105() {
  module_enable(array('breol_subject'), TRUE);
}

/**
 * Enable breol_link.
 */
function breol_base_update_7106() {
  module_enable(array('breol_link'), TRUE);
}

/**
 * Enable breol_frontend.
 */
function breol_base_update_7107() {
  module_enable(array('breol_frontend'), TRUE);
}

/**
 * Enable breol_section.
 */
function breol_base_update_7108() {
  module_enable(array('breol_section'), TRUE);
}

/**
 * Enable breol_page.
 */
function breol_base_update_7109() {
  module_enable(array('breol_page'), TRUE);
}

/**
 * Enable and set Wille as default theme.
 */
function breol_base_update_7110() {
  theme_enable(array('wille'));
  variable_set('theme_default', 'wille');
}

/**
 * Enable breol_fancy_box.
 */
function breol_base_update_7111() {
  module_enable(array('breol_fancy_box'), TRUE);
}

/**
 * Enable breol_frontpage.
 */
function breol_base_update_7112() {
  module_enable(array('breol_frontpage'), TRUE);
}

/**
 * Enable ding_unilogin.
 */
function breol_base_update_7113() {
  module_enable(array('ding_unilogin'), TRUE);
}

/**
 * Enable reol_loan.
 */
function breol_base_update_7114() {
  module_enable(array('reol_loan'), TRUE);
}

/**
 * Enable reol_field_carousel.
 */
function breol_base_update_7115() {
  module_enable(array('reol_field_carousel'), TRUE);
}

/**
 * Enable reol_use_loan.
 */
function breol_base_update_7116() {
  module_enable(array('reol_use_loan'), TRUE);
}

/**
 * Revert various breol features.
 */
function breol_base_update_7117() {
  features_revert_module('breol_frontpage');
  features_revert_module('breol_frontend');
  features_revert_module('breol_search_frontend');
  features_revert_module('breol_subject');
  features_revert_module('breol_section');
  features_revert_module('breol_page');
  features_revert_module('breol_link');
}

/**
 * Enable breol_facetbrowser.
 */
function breol_base_update_7118() {
  module_enable(array('breol_facetbrowser'), TRUE);
}

/**
 * Enable breol_unilogin_statistics.
 */
function breol_base_update_7119() {
  module_enable(array('breol_unilogin_statistics'), TRUE);
}

/**
 * Enable googleanalytics.
 */
function breol_base_update_7120() {
  module_enable(array('googleanalytics'), TRUE);
}

/**
 * Enable reol_announcement.
 */
function breol_base_update_7121() {
  module_enable(array('reol_announcement'), TRUE);
}

/**
 * Enable ding_webtrends.
 */
function breol_base_update_7122() {
  module_enable(array('ding_webtrends'), TRUE);
}

/**
 * Enable reol_statistics.
 */
function breol_base_update_7123() {
  module_enable(array('reol_statistics'), TRUE);
}

/**
 * Enable breol_news_page.
 */
function breol_base_update_7124() {
  module_enable(array('breol_news_page'), TRUE);
}

/**
 * Revert breol_search_frontend.
 */
function breol_base_update_7125() {
  features_revert_module('breol_search_frontend');
}

/**
 * Enable reol_frontend.
 */
function breol_base_update_7126() {
  module_enable(array('reol_frontend'), TRUE);
}

/**
 * Enable reol_carousel.
 */
function breol_base_update_7127() {
  module_enable(array('reol_carousel'), TRUE);
}

/**
 * Enable breol_inspiration.
 */
function breol_base_update_7128() {
  module_enable(array('breol_inspiration'), TRUE);
}

/**
 * Enable reol_carousel_paragraph.
 */
function breol_base_update_7129() {
  module_enable(array('reol_carousel_paragraph'), TRUE);
}

/**
 * Enable reol_audio_preview_paragraph.
 */
function breol_base_update_7130() {
  module_enable(array('reol_audio_preview_paragraph'), TRUE);
}

/**
 * Enable reol_two_element_paragraph.
 */
function breol_base_update_7131() {
  module_enable(array('reol_two_element_paragraph'), TRUE);
}

/**
 * Enable breol_carousel_paragraph.
 */
function breol_base_update_7132() {
  module_enable(array('breol_carousel_paragraph'), TRUE);
}

/**
 * Enable reol_video_paragraph.
 */
function breol_base_update_7133() {
  module_enable(array('reol_video_paragraph'), TRUE);
}

/**
 * Enable breol_link_paragraph.
 */
function breol_base_update_7134() {
  module_enable(array('breol_link_paragraph'), TRUE);
}

/**
 * Enable breol_see_all_news_button_paragraph.
 */
function breol_base_update_7135() {
  module_enable(array('breol_see_all_news_button_paragraph'), TRUE);
}

/**
 * Revert breol_link_paragraph feature.
 */
function breol_base_update_7136() {
  features_revert_module('breol_link_paragraph');
}

/**
 * Revert inspiration feature.
 */
function breol_base_update_7137() {
  features_revert_module('breol_link_paragraph');
}

/**
 * Translate "Audio preview".
 */
function breol_base_update_7138() {
  reol_base_locale_add_translation('Audio preview', 'Uddrag');
}

/**
 * Revert features.
 */
function breol_base_update_7139() {
  features_revert_module('breol_news');
  features_revert_module('breol_section');
  features_revert_module('breol_video');
}

/**
 * Revert features.
 */
function breol_base_update_7140() {
  features_revert_module('breol_carousel_paragraph');
  features_revert_module('breol_link_paragraph');
}

/**
 * Translate "see all".
 */
function breol_base_update_7141() {
  reol_base_locale_add_translation('See all', 'Se alle');
}

/**
 * Set module weight.
 */
function breol_base_update_7142() {
  // Ensure that form alter is executed last.
  db_query("UPDATE {system} SET weight = 300 WHERE type = 'module' AND name = 'breol_base'");
}

/**
 * Enable and configure appbanners.
 */
function breol_base_update_7143() {
  module_enable(array('appbanners'), TRUE);

  // Default variable values.
  $variables = array(
    'appbanners_android_app_id' => 'io.gonative.android.wwlqm',
    'appbanners_android_icon' => '/sites/all/themes/wille/images/favicon/play-store-icon-192.png',
    'appbanners_android_name' => 'eReolen GO! app',
    'appbanners_android_short_name' => 'eReolen GO! app',

    'appbanners_ios_app_id' => '1149963343',

    // Include banner on all pages.
    'appbanners_pages' => '*',
    'appbanners_visibility' => 'include',
  );

  foreach ($variables as $name => $value) {
    variable_set($name, $value);
  }
}

/**
 * Set new module weight for SSO login execution order.
 */
function breol_base_update_7144() {
  db_update('system')
    ->fields(array('weight' => 10000))
    ->condition('name', 'breol_base')
    ->condition('type', 'module')
    ->execute();
}

/**
 * Enable Menu Attributes module.
 */
function breol_base_update_7145() {
  module_enable(array('menu_attributes'), TRUE);

  // Add default classes to items in main-menu.
  // Map from menu item title to css class name.
  $default_classes = [
    'e-bøger' => 'menu-e-books',
    'lydbøger' => 'menu-audio-books',
    'Min side' => 'menu-profile',
    'hjælp' => 'menu-help',
    'søg' => 'menu-search',
  ];
  $links = menu_load_links('main-menu');
  foreach ($links as $link) {
    $title = $link['link_title'];
    if (isset($default_classes[$title])) {
      $link['options']['item_attributes']['class'] = $default_classes[$title];
      menu_link_save($link);
    }
  }
}

/**
 * Enable VideoTool media module.
 */
function breol_base_update_7146() {
  module_enable(array('media_videotool'), TRUE);
}

/**
 * Removed dead entity type "ding_type"
 */
function breol_base_update_7147() {
  $field_names = array(
    'field_weight',
    'field_state',
    'field_content_status',
    'field_ding_content_tags',
    'field_ding_list',
    'field_ding_list_permission',
    'field_ding_list_permissions',
    'field_ding_list_status',
    'field_ding_list_user',
    'field_element_type',
    'field_list_objects',
    'field_list_type',
    'field_note',
    'field_notes',
    'field_search_query',
    'field_search_title',
    'field_taxonomy_term',
    'field_ting_object',
    'field_value',
    'field_ding_interaction_body',
    'field_ding_interaction_links',
    'field_ding_interaction_status',
  );

  breol_base_remove_dead_entity_type($field_names, 'ding_type');
}

/**
 * Removed dead entity type "message"
 */
function breol_base_update_7148() {
  $field_names = array(
    'field_first_element',
    'field_last_check',
    'field_last_element',
    'field_list_id',
    'field_new_count',
    'field_state',
  );

  breol_base_remove_dead_entity_type($field_names, 'message');
}

/**
 * Removed dead entity type "message_type"
 */
function breol_base_update_7149() {
  $field_names = array(
    'message_text',
  );

  breol_base_remove_dead_entity_type($field_names, 'message_type');
}

/**
 * Reset module weight.
 */
function breol_base_update_7150() {
  db_update('system')
    ->fields(array('weight' => 0))
    ->condition('name', 'breol_base', '=')
    ->execute();
}
