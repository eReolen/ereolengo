<?php

/**
 * @file
 * Install, update and uninstall functions for the breol_news module.
 */

/**
 * Move news content from body to lead.
 */
function breol_news_update_7101(&$sandbox) {
  $items_per_batch = 50;

  // Initial setup.
  if (!isset($sandbox['processed'])) {
    // Revert our features to make sure that the lead field exists before we
    // move content into it.
    features_revert_module('breol_news');

    // Get nids of news with body.
    $query = db_select('node', 'n');
    $query->join('field_data_body', 'b', '(b.entity_id = n.nid AND b.entity_type = :node)', [':node' => 'node']);
    $nids = $query
      ->fields('n', ['nid'])
      ->condition('n.type', 'breol_news')
      ->execute()
      ->fetchCol();
    if (empty($nids)) {
      watchdog('breol_news', 'There are no items to process.', [], WATCHDOG_NOTICE);
      return;
    }

    $sandbox['processed'] = 0;
    $sandbox['total'] = count($nids);
    $sandbox['nids'] = $nids;
  }

  // Process a batch of nids.
  for ($i = 0; $i < $items_per_batch; $i++) {
    if ($nid = array_shift($sandbox['nids'])) {
      $node = node_load($nid);
      $node->field_lead = $node->body;
      $node->body = [];
      node_save($node);
      $sandbox['processed']++;
    }
  }

  // Update batch status.
  $sandbox['#finished'] = ($sandbox['processed'] >= $sandbox['total']) ? 1 : ($sandbox['processed'] / $sandbox['total']);

  $args = array(
    '!done' => $sandbox['processed'],
    '!total' => $sandbox['total'],
    '!pct' => round(($sandbox['processed'] / $sandbox['total']) * 100, 2),
  );

  return t('Completed !done/!total (!pct%)', $args);
}
